# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\WorkPage.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QImage,QPixmap
import cv2
import xlsxwriter
import datetime
from pyzbar.pyzbar import decode
import pandas
import openpyxl


class Ui_HomeWindow(object):
    def __init__(self):
        super().__init__()
        self.HomeWindow2=QtWidgets.QMainWindow()
        # self.ui=Ui_HomeWindow()
        # self.ui.setupUi(self.HomeWindow)
        self.table_row=0
        self.work_book=None
        self.row=3
        self.filePath=None
        self.pause=False
        self.IDCardData={"IDNumber":None, "OldIDNumber":None, "FullName":None,"DayOfBirth":None,"Gender":None,"Adress":None}
        self.ListData=[]
        # self.setupUi(self)

    def setupUi(self, HomeWindow):
        HomeWindow.setObjectName("HomeWindow")
        HomeWindow.resize(1442, 789)
        self.centralwidget = QtWidgets.QWidget(HomeWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.img_label = QtWidgets.QLabel(self.centralwidget)
        self.img_label.setGeometry(QtCore.QRect(10, 120, 681, 501))
        self.img_label.setFrameShape(QtWidgets.QFrame.Box)
        self.img_label.setLineWidth(1)
        self.img_label.setObjectName("img_label")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(10, 10, 531, 91))
        self.groupBox.setObjectName("groupBox")
        self.OpenFileButton = QtWidgets.QPushButton(self.groupBox)
        self.OpenFileButton.setGeometry(QtCore.QRect(10, 20, 231, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.OpenFileButton.setFont(font)
        self.OpenFileButton.setObjectName("OpenFileButton")
        self.SaveFileButton = QtWidgets.QPushButton(self.groupBox)
        self.SaveFileButton.setGeometry(QtCore.QRect(280, 20, 241, 61))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.SaveFileButton.setFont(font)
        self.SaveFileButton.setObjectName("pushButton_2")
        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_3.setGeometry(QtCore.QRect(700, 110, 731, 531))
        self.groupBox_3.setObjectName("groupBox_3")
        self.IdData_tableWidget = QtWidgets.QTableWidget(self.groupBox_3)
        self.IdData_tableWidget.setGeometry(QtCore.QRect(10, 20, 711, 501))
        self.IdData_tableWidget.setObjectName("tableWidget")
        self.IdData_tableWidget.setColumnCount(5)
        self.IdData_tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.IdData_tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.IdData_tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.IdData_tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.IdData_tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.IdData_tableWidget.setHorizontalHeaderItem(4, item)
        self.PauseButton = QtWidgets.QPushButton(self.centralwidget)
        self.PauseButton.setGeometry(QtCore.QRect(970, 660, 321, 71))
        font = QtGui.QFont()
        font.setPointSize(26)
        self.PauseButton.setFont(font)
        self.PauseButton.setObjectName("PauseButton")
        HomeWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(HomeWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1442, 26))
        self.menubar.setObjectName("menubar")
        HomeWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(HomeWindow)
        self.statusbar.setObjectName("statusbar")
        HomeWindow.setStatusBar(self.statusbar)

        self.retranslateUi(HomeWindow)
        QtCore.QMetaObject.connectSlotsByName(HomeWindow)

        self.PauseButton.setDisabled(True)

        self.PauseButton.clicked.connect(self.Pause_button)
        self.OpenFileButton.clicked.connect(self.brower_File)
        self.SaveFileButton.clicked.connect(self.save_File)

    def retranslateUi(self, HomeWindow):
        self.HomeWindow2=HomeWindow
        _translate = QtCore.QCoreApplication.translate
        HomeWindow.setWindowTitle(_translate("HomeWindow", "Pham mem lap bien ban CCCD"))
        self.img_label.setText(_translate("HomeWindow", "TextLabel"))
        self.groupBox.setTitle(_translate("HomeWindow", "File"))
        self.OpenFileButton.setText(_translate("HomeWindow", "MỞ BIÊN BẢN"))
        self.SaveFileButton.setText(_translate("HomeWindow", "TẠO BIÊN BẢN"))
        self.groupBox_3.setTitle(_translate("HomeWindow", "Ket qua"))
        item = self.IdData_tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("HomeWindow", "Số CCCD"))
        item = self.IdData_tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("HomeWindow", "Số CMND"))
        item = self.IdData_tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("HomeWindow", "Họ và tên"))
        item = self.IdData_tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("HomeWindow", "Ngày tháng năm sinh"))
        item = self.IdData_tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("HomeWindow", "Giới Tính"))
        self.PauseButton.setText(_translate("HomeWindow", "TIẾP TỤC"))

    def ProcessingStr(self,ch):
        stt=-1
        ch=ch.replace('|null null','')
        for i in range(len(ch)):
            if ch[i]=="|":
                self.ListData.append(str(ch[stt+1:i]))
                stt=i
            elif i == len(ch)-1:
                self.ListData.append(str(ch[stt+1:i]))                             
        self.WriteDataToExcel()
        
    def WriteDataToExcel(self):
        
        self.ListData[3]=self.ListData[3][0:2]+"/"+self.ListData[3][2:4]+"/"+self.ListData[3][4:9]
        self.IDCardData={"IDNumber":self.ListData[0], "OldIDNumber":self.ListData[1], "FullName":self.ListData[2],"DayOfBirth":self.ListData[3],"Gender":self.ListData[4],"Adress":self.ListData[5]}
        self.ListData = []
        # print(self.IDCardData["IDNumber"])
        # # write data to excel
        work_sheet=self.work_book.active
        work_sheet.cell(self.row,1).value=self.IDCardData["IDNumber"]
        work_sheet.cell(self.row,2).value=self.IDCardData["FullName"]
        work_sheet.cell(self.row,3).value=self.IDCardData["DayOfBirth"]
        work_sheet.cell(self.row,4).value=self.IDCardData["Gender"]

        # save excel file
        while True:
            try:    
                self.work_book.save(self.filePath)
                self.loadDataToTable()
                # print(f"Dữ liệu được lưu ở dòng: {self.row}")
            except:
                mgs = QtWidgets.QMessageBox()
                mgs.setText("file excel dang mo tat file excel de tiep tuc")
                x=mgs.exec_()
            break
        return 0
    def loadDataToTable(self):
        self.IdData_tableWidget.setRowCount(self.table_row+1)
        # for data in self.IDCardData.values():
        self.IdData_tableWidget.setItem(self.table_row, 0 ,QtWidgets.QTableWidgetItem(self.IDCardData["IDNumber"]))
        self.IdData_tableWidget.setItem(self.table_row, 1 ,QtWidgets.QTableWidgetItem(self.IDCardData["OldIDNumber"]))
        self.IdData_tableWidget.setItem(self.table_row, 2 ,QtWidgets.QTableWidgetItem(self.IDCardData["FullName"]))
        self.IdData_tableWidget.setItem(self.table_row, 3 ,QtWidgets.QTableWidgetItem(self.IDCardData["DayOfBirth"]))
        self.IdData_tableWidget.setItem(self.table_row, 4 ,QtWidgets.QTableWidgetItem(self.IDCardData["Gender"]))
        self.IdData_tableWidget.scrollToBottom()
        self.IdData_tableWidget.selectRow(self.table_row)
        self.table_row=self.table_row+1

    def brower_File(self):
        fname=QtWidgets.QFileDialog.getOpenFileName(None,"Open file"," ","Excel Files (*.xlsx *.xlsm *.xltx *.xltm)")
        if fname[0]!="":
            self.filePath=fname[0]
            self.openfile()
            self.PauseButton.setDisabled(False)
            self.HomeWindow2.setWindowTitle("Pham mem lap bien ban CCCD                     File: "+str(self.filePath))
    def save_File(self):
        fname=QtWidgets.QFileDialog.getSaveFileName(None,"Save file"," ","Excel flie (*.xlsx)")
        if fname[0]!="":
            self.PauseButton.setDisabled(False)
            self.filePath=fname[0]
            self.CreatedNewExcel()
    def Pause_button(self):
        self.pause = False
        self.PauseButton.setDisabled(True)
        self.camera(self.pause)

    def camera(self, pause):
        cap = cv2.VideoCapture(0)
        detector = cv2.QRCodeDetector()
        while cap.isOpened() and self.pause == False:
            _, frame = cap.read()
            self.ScanQRCode(frame, detector)
            frame = QImage(frame, frame.shape[1], frame.shape[0], QImage.Format_RGB888)
            frame = frame.rgbSwapped()
            self.img_label.setPixmap(QPixmap.fromImage(frame))
            cv2.waitKey(1)
        cap.release()
        cv2.destroyAllWindows()

    def ScanQRCode(self,img,detector):
        data, bbox, _ = detector.detectAndDecode(img)
        if str(data).isspace() is False:
            if bbox is not None:
                # display the image with lines
                for i in range(len(bbox)):                
                    # draw all lines
                    cv2.line(img, bbox[i][0].astype(int), bbox[(i+1) % len(bbox)][0].astype(int), color=(255, 0, 0), thickness=2)
                    barcode = decode(img)                    
                    # if len(barcode)!=0:                 #this code using to debug
                    #    print(barcode[0].data.decode())
                    #    mgs=QtWidgets.QMessageBox()
                    #    mgs.setText(barcode[0].data.decode())
                    #    x = mgs.exec_()  
                    if len(barcode)!=0:
                        self.ProcessingStr(barcode[0].data.decode())
                        self.row=self.row+1
                        self.pause=True
                        self.PauseButton.setDisabled(False)
                        
                        # mgs=QtWidgets.QMessageBox()
                        # mgs.setText(barcode[0].data.decode())
                        # x = mgs.exec_()  
    def CreatedNewExcel(self):
        # workbook = xlsxwriter.Workbook("Bien ban giao nhan CCCD ngay "+datetime.date.today().strftime("%d.%m.%Y")+".xlsx")
        self.workbook=xlsxwriter.Workbook(self.filePath)
        title_format=self.workbook.add_format({
            "bold": 1,
            "border": 1,
            "align": "center",
            "valign": "vcenter",
            })
        self.worksheet = self.workbook.add_worksheet()
        self.worksheet.set_paper(9)
        self.worksheet.merge_range("A1:F1","Bien ban giao nhan Can cuoc cong dan ngay "+datetime.date.today().strftime("%d/%m/%Y"))
        self.worksheet.write(2,0,"Số CCCD",title_format)
        self.worksheet.set_column(2,0,13)
        self.worksheet.write(2,1,"Họ và tên",title_format)
        self.worksheet.set_column(2,1,13)
        self.worksheet.write(2,2,"Ngày tháng năm sinh",title_format)
        self.worksheet.set_column(2,2,17)
        self.worksheet.write(2,3,"Giới tính",title_format)
        self.worksheet.set_column(2,3,10)
        self.workbook.close()
        self.openfile()
        self.HomeWindow2.setWindowTitle("Pham mem lap bien ban CCCD                     File: "+str(self.filePath))
    def openfile(self):
        try:
            file=pandas.read_excel(self.filePath,engine='openpyxl',header=None)
            num_row = len(file.index)
            self.row=num_row+1
            self.work_book = openpyxl.load_workbook(self.filePath)
        except:
            mgs = QtWidgets.QMessageBox()
            mgs.setText("tep da chon khong duoc ho tro")
            x=mgs.exec_()
            return 0
if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_HomeWindow() 
    ui.setupUi(MainWindow)
    MainWindow.show()
    try:
        sys.exit(app.exec_())
    except:
        pass